/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gestionpedidos;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Enumeration;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;
import javax.swing.UIDefaults;
import javax.swing.UIManager;
import javax.swing.plaf.ColorUIResource;

/**
 *
 * @author Sergio
 */
public class NewJFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
        JFrame principal = this;
        this.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        this.setSize(200, 500);
        this.setVisible(true);
        jPasswordField1.setText("");

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jPasswordField1 = new javax.swing.JPasswordField();
        jLabel2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setBounds(new java.awt.Rectangle(30, 30, 30, 30));
        setFocusCycleRoot(false);
        setFocusable(false);
        setUndecorated(true);
        setResizable(false);

        jLabel1.setBackground(new java.awt.Color(0, 153, 255));
        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("CLAVE de EMPLEADO");
        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 51, 255)));
        jLabel1.setOpaque(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jButton1.setBackground(new java.awt.Color(255, 204, 204));
        jButton1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 153, 0));
        jButton1.setMnemonic('\r');
        jButton1.setText("Aceptar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPasswordField1.setBackground(new java.awt.Color(255, 153, 153));
        jPasswordField1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jPasswordField1.setText("jPasswordField1");
        jPasswordField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jPasswordField1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jPasswordField1FocusLost(evt);
            }
        });
        jPasswordField1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPasswordField1MousePressed(evt);
            }
        });
        jPasswordField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPasswordField1ActionPerformed(evt);
            }
        });
        jPasswordField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jPasswordField1KeyReleased(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Clave");

        jButton2.setBackground(new java.awt.Color(255, 204, 204));
        jButton2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(51, 153, 0));
        jButton2.setMnemonic('c');
        jButton2.setText("C/Cancelar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jButton2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton2KeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2)))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestionpedidos/cancel.png"))); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gestionpedidos/minus.png"))); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(193, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(191, 191, 191))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addGap(37, 37, 37)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(183, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        Runnable miRunnable = new Runnable() {

            @Override
            public void run() {
                NewJDialog dialogoEspera = new NewJDialog(null,false);
                dialogoEspera.setVisible(true);
                
                      ConexionBD conexion = new ConexionBD();
                      conexion.consultaLogin(jPasswordField1.getText());
                      dialogoEspera.setVisible(false);
            }
        };
         Thread hilo = new Thread (miRunnable);
      hilo.start();
      
      
                //        if (!jPasswordField1.getText().equals("")) {
                //
                //            //colocamos la ventana en las coordenadas calculadas anteriormente
                //            //CONEXIÓN A LA BASE DE DATOS
                //            
                //            try {
                //                //Lanzamos el dialogo de espera..
                //                NewJDialog dialogoEspera = new NewJDialog(this, rootPaneCheckingEnabled);
                //                
                //                //Asignar el driver de la base de datos.
                //                Class.forName("com.mysql.jdbc.Driver");
                //                //Establecemos la conexión con la base de datos.
                //                Connection conexion = DriverManager.getConnection("jdbc:mysql://sql7.freesqldatabase.com/sql7143904","sql7143904","TzNhGaxJj6");
                //                //Realizar la consulta y recoger el resultado en un objeto ResulSet.
                //                Statement sentencia = conexion.createStatement();
                //                String contraseña = new String(jPasswordField1.getPassword());
                //                ResultSet resul = sentencia.executeQuery("Select count(NOMBRE) from Empleados where clave='" + contraseña + "'");
                //                //Mostrar el resultado de la consulta.
                //
                //                while (resul.next()) {
                //                    dialogoEspera.setVisible(true);
                //                    if (resul.getInt(1) == 0) {
                //                        JOptionPane.showMessageDialog(rootPane, "No existe empleado con esa clave! ");
                //
                //                        System.out.println(contraseña);
                //                    } else {
                //                        resul = sentencia.executeQuery("Select nombre from Empleados where clave ='" + contraseña + "'");
                //                        while (resul.next()) {
                //
                //                            JFrameMenu menu = new JFrameMenu(resul.getString(1));
                //                            Dimension pantalla = Toolkit.getDefaultToolkit().getScreenSize();
                //                            int height = pantalla.height;
                //                            int width = pantalla.width;
                //                            menu.setSize(width / 2, height / 2);
                //
                //                            menu.setLocationRelativeTo(null);
                //                            menu.setVisible(true);
                //
                //                            this.setVisible(false);
                //                            System.out.println(resul.getInt(1));
                //
                //                        }
                //
                //                    }
                //                }
                // dialogoEspera.setVisible(false);
                //
                ////            //Liberar los objetos creados
                //                resul.close();
                //                sentencia.close();
                //                conexion.close();
                //               
                //            } catch (ClassNotFoundException ex) {
                //                System.out.println("Error con el driver de la base de datos ");
                //
                //            } catch (SQLException ex) {
                //                System.out.println("Error en la conexión" + ex.getMessage());
                //            }
                //        } else {
                //            JOptionPane.showMessageDialog(rootPane, "¡El campo CLAVE es obligatorio!");
                //        }

        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jPasswordField1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPasswordField1MousePressed
        // TODO add your handling code here:
        jPasswordField1.setText("");
    }//GEN-LAST:event_jPasswordField1MousePressed

    private void jPasswordField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPasswordField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPasswordField1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // Botón salir con panel de opciones
        UIManager UI = new UIManager();
        UI.put("OptionPane.background", new ColorUIResource(255, 255, 255));
        UI.put("Panel.background", new ColorUIResource(255, 255, 255));
        UI.put("Button.background", new ColorUIResource(0, 153, 0));
        int respuesta = JOptionPane.showConfirmDialog(rootPane, "¿Seguro que desea salir?", "Confirmar salida", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (respuesta == 0) {

            System.exit(0);
        } else {

        }

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        jPasswordField1.setText("");
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton2KeyPressed
        // 
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

        }

    }//GEN-LAST:event_jButton2KeyPressed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        UIDefaults d = UIManager.getDefaults();
        Enumeration<Object> claves = d.keys();
        while (claves.hasMoreElements()) {
            System.out.println(claves.nextElement());
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jPasswordField1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPasswordField1FocusLost
        // TODO add your handling code here:
        jPasswordField1.setBackground(Color.BLACK);
        jPasswordField1.setForeground(Color.WHITE);
    }//GEN-LAST:event_jPasswordField1FocusLost

    private void jPasswordField1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPasswordField1FocusGained
        // TODO add your handling code here:
        getRootPane().setDefaultButton(jButton1);
        jPasswordField1.setBackground(Color.PINK);
        jPasswordField1.setForeground(Color.BLACK);
    }//GEN-LAST:event_jPasswordField1FocusGained

    private void jPasswordField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPasswordField1KeyReleased
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            // NewJFrame1 jframe = new NewJFrame1();

            if (!jPasswordField1.getText().equals("")) {

            //colocamos la ventana en las coordenadas calculadas anteriormente
                //CONEXIÓN A LA BASE DE DATOS
                try {
                    //Asignar el driver de la base de datos.
                    Class.forName("com.mysql.jdbc.Driver");
                    //Establecemos la conexión con la base de datos.
                    Connection conexion = DriverManager.getConnection("jdbc:mysql://sql7.freesqldatabase.com/sql7143904", "sql7143904", "TzNhGaxJj6");
                    //Realizar la consulta y recoger el resultado en un objeto ResulSet.
                    Statement sentencia = conexion.createStatement();
                    String contraseña = new String(jPasswordField1.getPassword());

                    ResultSet resul = sentencia.executeQuery("Select count(NOMBRE) from Empleados where clave='" + contraseña + "'");
                    //Mostrar el resultado de la consulta.

                    while (resul.next()) {
                        if (resul.getInt(1) == 0) {
                            JOptionPane.showMessageDialog(rootPane, "No existe empleado con esa clave! ");

                            System.out.println(contraseña);
                        } else {
                            resul = sentencia.executeQuery("Select nombre from Empleados where clave ='" + contraseña + "'");
                            while (resul.next()) {

                                JFrameMenu menu = new JFrameMenu(resul.getString(1));
                                Dimension pantalla = Toolkit.getDefaultToolkit().getScreenSize();
                                int height = pantalla.height;
                                int width = pantalla.width;
                                menu.setSize(width / 2, height / 2);

                                menu.setLocationRelativeTo(null);
                                menu.setVisible(true);

                                this.setVisible(false);
                                System.out.println(resul.getInt(1));

                            }

                        }
                    }

//            //Liberar los objetos creados
                    resul.close();
                    sentencia.close();
                    conexion.close();

                } catch (ClassNotFoundException ex) {
                    System.out.println("Error con el driver de la base de datos ");
                    JOptionPane.showMessageDialog(rootPane, "Error con la base de datos");

                } catch (SQLException ex) {
                    System.out.println("Error en la conexión" + ex.getMessage());
                }
            } else {
                JOptionPane.showMessageDialog(rootPane, "¡El campo CLAVE es obligatorio!");
            }

        }
    }//GEN-LAST:event_jPasswordField1KeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                NewJFrame framePrincipal = new NewJFrame();
                Dimension pantalla = Toolkit.getDefaultToolkit().getScreenSize();
                int height = pantalla.height;
                int width = pantalla.width;
                framePrincipal.setSize(width / 2, height / 2);

                framePrincipal.setLocationRelativeTo(null);
                framePrincipal.setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPasswordField jPasswordField1;
    // End of variables declaration//GEN-END:variables
public void CentrarJFrame() {
        //super("Centrar JFrame");	

        Dimension pantalla = Toolkit.getDefaultToolkit().getScreenSize();
        int height = pantalla.height;
        int width = pantalla.width;
        setSize(width / 2, height / 2);

        setLocationRelativeTo(null);
        setVisible(true);
    }

}
